//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MasterProject.FoodSupplier {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FoodSupplier.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Plus", ReplyAction="http://tempuri.org/IService/PlusResponse")]
        int Plus(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Plus", ReplyAction="http://tempuri.org/IService/PlusResponse")]
        System.Threading.Tasks.Task<int> PlusAsync(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Minus", ReplyAction="http://tempuri.org/IService/MinusResponse")]
        int Minus(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Minus", ReplyAction="http://tempuri.org/IService/MinusResponse")]
        System.Threading.Tasks.Task<int> MinusAsync(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Multi", ReplyAction="http://tempuri.org/IService/MultiResponse")]
        int Multi(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Multi", ReplyAction="http://tempuri.org/IService/MultiResponse")]
        System.Threading.Tasks.Task<int> MultiAsync(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Divide", ReplyAction="http://tempuri.org/IService/DivideResponse")]
        double Divide(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Divide", ReplyAction="http://tempuri.org/IService/DivideResponse")]
        System.Threading.Tasks.Task<double> DivideAsync(int num1, int num2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MasterProject.FoodSupplier.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MasterProject.FoodSupplier.IService>, MasterProject.FoodSupplier.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Plus(int num1, int num2) {
            return base.Channel.Plus(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> PlusAsync(int num1, int num2) {
            return base.Channel.PlusAsync(num1, num2);
        }
        
        public int Minus(int num1, int num2) {
            return base.Channel.Minus(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> MinusAsync(int num1, int num2) {
            return base.Channel.MinusAsync(num1, num2);
        }
        
        public int Multi(int num1, int num2) {
            return base.Channel.Multi(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> MultiAsync(int num1, int num2) {
            return base.Channel.MultiAsync(num1, num2);
        }
        
        public double Divide(int num1, int num2) {
            return base.Channel.Divide(num1, num2);
        }
        
        public System.Threading.Tasks.Task<double> DivideAsync(int num1, int num2) {
            return base.Channel.DivideAsync(num1, num2);
        }
    }
}
