//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MasterProject.FoodSupplier {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseModel", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MasterProject.FoodSupplier.FoodType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MasterProject.FoodSupplier.Food))]
    public partial class BaseModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FoodType", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class FoodType : MasterProject.FoodSupplier.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FoodTypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FoodTypeName {
            get {
                return this.FoodTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FoodTypeNameField, value) != true)) {
                    this.FoodTypeNameField = value;
                    this.RaisePropertyChanged("FoodTypeName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Food", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Food : MasterProject.FoodSupplier.BaseModel {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FoodDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FoodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FoodPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FoodPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MasterProject.FoodSupplier.FoodType FoodTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FoodDescription {
            get {
                return this.FoodDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FoodDescriptionField, value) != true)) {
                    this.FoodDescriptionField = value;
                    this.RaisePropertyChanged("FoodDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FoodName {
            get {
                return this.FoodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FoodNameField, value) != true)) {
                    this.FoodNameField = value;
                    this.RaisePropertyChanged("FoodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FoodPicture {
            get {
                return this.FoodPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.FoodPictureField, value) != true)) {
                    this.FoodPictureField = value;
                    this.RaisePropertyChanged("FoodPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double FoodPrice {
            get {
                return this.FoodPriceField;
            }
            set {
                if ((this.FoodPriceField.Equals(value) != true)) {
                    this.FoodPriceField = value;
                    this.RaisePropertyChanged("FoodPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MasterProject.FoodSupplier.FoodType FoodType {
            get {
                return this.FoodTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FoodTypeField, value) != true)) {
                    this.FoodTypeField = value;
                    this.RaisePropertyChanged("FoodType");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FoodSupplier.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllFood", ReplyAction="http://tempuri.org/IService/GetAllFoodResponse")]
        MasterProject.FoodSupplier.Food GetAllFood(MasterProject.FoodSupplier.Food food);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllFood", ReplyAction="http://tempuri.org/IService/GetAllFoodResponse")]
        System.Threading.Tasks.Task<MasterProject.FoodSupplier.Food> GetAllFoodAsync(MasterProject.FoodSupplier.Food food);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Supply", ReplyAction="http://tempuri.org/IService/SupplyResponse")]
        int Supply(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Supply", ReplyAction="http://tempuri.org/IService/SupplyResponse")]
        System.Threading.Tasks.Task<int> SupplyAsync(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsPaid", ReplyAction="http://tempuri.org/IService/IsPaidResponse")]
        int IsPaid(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsPaid", ReplyAction="http://tempuri.org/IService/IsPaidResponse")]
        System.Threading.Tasks.Task<int> IsPaidAsync(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Divide", ReplyAction="http://tempuri.org/IService/DivideResponse")]
        double Divide(int num1, int num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Divide", ReplyAction="http://tempuri.org/IService/DivideResponse")]
        System.Threading.Tasks.Task<double> DivideAsync(int num1, int num2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MasterProject.FoodSupplier.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MasterProject.FoodSupplier.IService>, MasterProject.FoodSupplier.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MasterProject.FoodSupplier.Food GetAllFood(MasterProject.FoodSupplier.Food food) {
            return base.Channel.GetAllFood(food);
        }
        
        public System.Threading.Tasks.Task<MasterProject.FoodSupplier.Food> GetAllFoodAsync(MasterProject.FoodSupplier.Food food) {
            return base.Channel.GetAllFoodAsync(food);
        }
        
        public int Supply(int num1, int num2) {
            return base.Channel.Supply(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> SupplyAsync(int num1, int num2) {
            return base.Channel.SupplyAsync(num1, num2);
        }
        
        public int IsPaid(int num1, int num2) {
            return base.Channel.IsPaid(num1, num2);
        }
        
        public System.Threading.Tasks.Task<int> IsPaidAsync(int num1, int num2) {
            return base.Channel.IsPaidAsync(num1, num2);
        }
        
        public double Divide(int num1, int num2) {
            return base.Channel.Divide(num1, num2);
        }
        
        public System.Threading.Tasks.Task<double> DivideAsync(int num1, int num2) {
            return base.Channel.DivideAsync(num1, num2);
        }
    }
}
